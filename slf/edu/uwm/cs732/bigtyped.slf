package edu.uwm.cs732;

terminals true false if then else value
    succ pred iszero numvalue Bool Nat in
    bad

syntax

t ::= true 
   | false
   | if t then t else t
   | 0
   | succ t
   | pred t
   | iszero t

T ::= Nat
   | Bool



judgment equality: t == t

------ eq
t == t

judgment typeequality: T == T

------ type-eq
T == T

judgment isanumval: t numvalue

---------- numval-zero
0 numvalue

t numvalue
--------------- numval-succ
succ t numvalue


judgment isavalue: t value

t numvalue
----------- val-num
t value

--------------- val-true
true value

---------------- val-false
false value


judgment bigeval: t ⇓ t

t value
------- B-Value
t ⇓ t

t1 ⇓ true
t2 ⇓ t2'
--------------------------- B-IfTrue
if t1 then t2 else t3 ⇓ t2'

t1 ⇓ false
t3 ⇓ t3'
--------------------------- B-IfFalse
if t1 then t2 else t3 ⇓ t3'

t1 ⇓ t1'
t1' numvalue
------------------ B-Succ
succ t1 ⇓ succ t1'

t1 ⇓ 0
----------- B-PredZero
pred t1 ⇓ 0

t1 ⇓ succ t1'
t1' numvalue
------------- B-PredSucc
pred t1 ⇓ t1'

t1 ⇓ 0
---------------- B-IszeroZero
iszero t1 ⇓ true

t1 ⇓ succ t1'
t1' numvalue
----------------- B-IszeroSucc
iszero t1 ⇓ false


judgment type: t : T

----------- T-True
true : Bool

------------ T-False
false : Bool

t1 : Bool
t2 : T
t3 : T
------------------------- T-If
if t1 then t2 else t3 : T

------- T-Zero
0 : Nat

t : Nat
------------ T-Succ
succ t : Nat

t : Nat
------------ T-Pred
pred t : Nat 

t : Nat
--------------- T-Iszero
iszero t : Bool

